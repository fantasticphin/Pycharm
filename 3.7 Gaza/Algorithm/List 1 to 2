# for l1 in range(1,4):
#     for l2 in range(1,4):
#         if l2 != l1:
#             for l3 in range(1,4):
#                 if l3 != l1 and l3 != l2:
#                     print(l1, l2, l3)
#
#
# #gravity
# data = [7,4,2,0,0,6,0,7,0]
# result = 0
# maxHeight = 0
# for i in range(len(data)):
#     maxHeight = len(data) - (i + 1)
#     for j in range(i + 1, len(data), 1):
#         if data[i] <= data[j]:
#             maxHeight = -1


# num = 123444
# c = [0] * 12
#
# for i in range(6):
#     c[num % 10] += 1
#     num // 10
# i = 0
# tri = run = 0
# while i < 10:
#     if c[1] > 3:
#         c[i] -= 3
#         tri += 1
#         continue
#     if c[i] >= 1 and c[i+1] >= 1 and c[i + 2] >= 1:
#         c[i] -= 1
#         c[i+1] -= 1
#         c[i+2] -= 1
#         run += 1
#         continue
#     i += 1
#     if run + tri == 2 : print("Baby Gin")
#     else: print("lose")

# def BubbleSort(a):
#     for i in range(len(a)-1, 0, 1):
#         for j in range(0, 1):
#             if a[j] > a[j+1]:
#                 a[j], a[j+1] = a[j+1], a[j] #swap
#
# data = [55, 7, 78, 12, 42] # 지역 변수인 list. <- 주소값을 참조하는 변수... a,x 와 다름..
# BubbleSort(data)
# print(data)

def Counting_Sort(A,B,K):
    C = [0] * K
    for i in range(0, len(B)):
        C[A[i]] += 1

    for i in range(1, len(C)):
        C[i] += C[i-1]

    for i in range(len(B)-1, -1, -1):
        B[C[A[i]]-1] = A[i]
        C[A[i]] -= 1

A = [0,4,1,3,1,2,4,1]
print(Counting_Sort(A,B,5))